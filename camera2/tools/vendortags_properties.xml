<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2012 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<metadata xmlns="http://schemas.android.com/service/camera/metadata/"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://schemas.android.com/service/camera/metadata/ metadata_properties.xsd">

  <tags>
    <tag id="AWB">
        Needed for auto white balance
    </tag>
    <tag id="BC">
        Needed for backwards compatibility with old Java API
    </tag>
    <tag id="V1">
        New features for first camera 2 release (API1)
    </tag>
    <tag id="ADV">
      <!-- TODO: fill the tag description -->
    </tag>
    <tag id="DNG">
        Needed for DNG file support
    </tag>
    <tag id="EXIF">
      <!-- TODO: fill the tag description -->
    </tag>
    <tag id="HAL2">
        Entry is only used by camera device HAL 2.x
    </tag>
    <tag id="FULL">
        Entry is required for full hardware level devices, and optional for other hardware levels
    </tag>
  </tags>

  <types>
    <typedef name="enumList">
      <language name="java">int</language>
    </typedef>
    <typedef name="rectangle">
      <language name="java">android.graphics.Rect</language>
    </typedef>
    <typedef name="size">
      <language name="java">android.hardware.camera2.Size</language>
    </typedef>
    <typedef name="string">
      <language name="java">String</language>
    </typedef>
    <typedef name="boolean">
      <language name="java">boolean</language>
    </typedef>
    <typedef name="imageFormat">
      <language name="java">int</language>
    </typedef>
  </types>

  <namespace name="com">
      <namespace name="intel">
      <!--@O~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~
      * The sections below this point are generated from metadata
      * definitions vendortags_properties_*.xml. Do not modify by
      * hand or modify the comment blocks at the start or end.
      *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@-->
        <section name="statistics">
          <controls>
              <entry name="analysisMode" type="byte" visibility="public" enum="true" >
                <enum>
                  <value>OFF
                  <notes>(default) Do not include AIQ extended results in capture result metadata</notes></value>
                  <value>ON
                  <notes>Include AIQ extended result in capture result metadata</notes></value>
                </enum>
                <description>Whether the extended AIQ analysis results are provided for each capture request.</description>
                <details>This is the list of extra tags that will be present in the result:

                           * multiframeHint
                           * sceneDected
                           * hdr.preferedExposures
                </details>
              </entry>
          </controls>

          <dynamic>
              <clone entry="com.intel.statistics.analysisMode" kind="controls"></clone>
              <entry name="multiFrameHint" type="byte" visibility="public" enum="true" >
                <enum>
                  <value>NONE
                  <notes>(default) No multiframe processing is required</notes></value>
                  <value>ULL
                  <notes>Capture would benefit of using Ultra Low Light post processing</notes></value>
                  <value>HDR
                  <notes>Capture would benefit of using High Dynamic Range post processing</notes></value>
                </enum>
                <description>This reports the recommendation from the Intel 3A to use one of the multi-frame postprocessing algotithms.</description>
                <details>To be added...
                </details>
              </entry>

              <entry name="sceneDetected" type="byte" visibility="public" enum="true" >
                <enum>
                  <value>NONE
                  <notes>ia_aiq_scene_mode_none</notes></value>
                  <value>CLOSE_UP_PORTRAIT
                  <notes>ia_aiq_scene_mode_close_up_portrait</notes></value>
                  <value>PORTRAIT
                  <notes>ia_aiq_scene_mode_portrait</notes></value>
                  <value>LOWLIGHT_PORTRAIT
                  <notes>ia_aiq_scene_mode_lowlight_portrait</notes></value>
                  <value>LOWLIGHT
                  <notes>ia_aiq_scene_mode_low_light</notes></value>
                  <value>ACTION
                  <notes>ia_aiq_scene_mode_action</notes></value>
                  <value>BACKLIGHT
                  <notes>ia_aiq_scene_mode_backlight</notes></value>
                  <value>LANDSCAPE
                  <notes>ia_aiq_scene_mode_landscape</notes></value>
                  <value>DOCUMENT
                  <notes>ia_aiq_scene_mode_document</notes></value>
                  <value>FIREWORK
                  <notes>ia_aiq_scene_mode_firework</notes></value>
                  <value>LOWLIGHT_ACTION
                  <notes>ia_aiq_scene_mode_lowlight_action</notes></value>
                  <value>BABY
                  <notes>ia_aiq_scene_mode_baby</notes></value>
                  <value>BARCODE
                  <notes>ia_aiq_scene_mode_barcode</notes></value>
                </enum>
                <description>This reports the recommended scene mode the user should select for optimal quality.</description>
                <details>This is the ouput of the Intel Discrete Scene Detection algorithm.
                </details>
              </entry>

          </dynamic>
        </section>
        <section name="cv">
          <controls>

              <entry name="smileDetectMode" type="byte" visibility="public" enum="true" type_notes="Smile detection mode">
                <enum>
                  <value>OFF
                  <notes>Do not include smile detection statistics in capture results</notes></value>
                  <value>ON
                  <notes>Return smile status and score values</notes></value>
                </enum>
                <description>Control of Smile detection.</description>
                <details>When ON, com.intel.cv.smileDetectStatus (dynamic) and com.intel.cv.smileDetectScores (dynamic) outputs are valid.
                </details>
              </entry>

              <entry name="blinkDetectMode" type="byte" visibility="public" enum="true" type_notes="Blink detection mode">
                <enum>
                  <value>OFF
                  <notes>Do not include blink detection statistics in capture results</notes></value>
                  <value>ON
                  <notes>Return blink status and score values</notes></value>
                </enum>
                <description>Control of Blink detection.</description>
                <details>When ON, com.intel.cv.blinkDetectStatus (dynamic) and com.intel.cv.blinkDetectScores (dynamic) outputs are valid.
                </details>
              </entry>

              <entry name="faceRecognizeMode" type="byte" visibility="public" enum="true" type_notes="Face recognition mode">
                <enum>
                  <value>OFF
                  <notes>Do not include face recognition statistics in capture results</notes></value>
                  <value>ON
                  <notes>Return person id and person similarity </notes></value>
                </enum>
                <description>Control of Face recognition.</description>
                <details>When ON, com.intel.cv.faceRecognizePersonIds (dynamic) and com.intel.cv.faceRecognizePersonSimilarities (dynamic) outputs are valid.
                </details>
              </entry>
          </controls>

          <dynamic>
              <clone entry="com.intel.cv.smileDetectMode" kind="controls"></clone>
              <entry name="smileDetectStatus" type="byte" visibility="public" type_notes="Smile detection status" container="array">
                <array>
                  <size>n</size>
                </array>
                <description>This metadata tag will provide a list of smile status of faces. The order of this list is always aligned with the IDs produced by the android-defined metadata tagin. 
                 android.statistics.faceIds.</description>
                <details>True means smiling face.
                         False means non-smiling face
                </details>
              </entry>

              <entry name="smileDetectScores" type="int32" visibility="public" type_notes="Smile detection scores" container="array">
                <array>
                  <size>n</size>
                </array>
                <description>This metadata tag will provide an list of smile confidence scores. The scores are confidence level that the face is smiling.</description>
                <range>[0,100]</range>
                <details>0 means itâ€™s no smile at all.
                         100 means fully smiling face.
                </details>
              </entry>

              <clone entry="com.intel.cv.blinkDetectMode" kind="controls"></clone>
              <entry name="blinkDetectStatus" type="byte" visibility="public" type_notes="Blink detection status" container="array">
                <array>
                  <size>2 x n</size>
                </array>
                <description>This metadata tag will provide a list of blink status of faces. The order of this list is always aligned with the IDs produced by the android-defined metadata tagin. 
        android.statistics.faceIds.</description>
                <details>True means closed eye.
                         False means open eye.
                         The meaning of array should be like:
                         "0th face lefe eye|0th face right eye|1th face left eye|1th face right eye|2th face left eye|2th face  right eye"
                </details>
              </entry>

              <entry name="blinkDetectScores" type="int32" visibility="public" type_notes="Blink detection scores" container="array">
                <array>
                  <size>2 x n</size>
                </array>
                <description>This metadata tag will provide an list of blink confidence scores. The scores are confidence level that the face is blinking.</description>
                <range>[0,100]</range>
                <details>0 means closed eye.
                         100 means wide-open eye.
                </details>
              </entry>

              <clone entry="com.intel.cv.faceRecognizeMode" kind="controls"></clone>
              <entry name="faceRecognizePersonIds" type="int32" visibility="public" type_notes="Face Recognizer Person Ids" container="array">
                <array>
                  <size>n</size>
                </array>
                <description>This metadata tag will provide a list of person Ids from face recognition. Each person is identified as unique positive integer. This is different from android.statistics.faceIds, which is unique among the tracking session</description>
                <details>-10000 means unkown face.
                         Positive integer means each person id. 0 is illegal.
                </details>
              </entry>

              <entry name="faceRecognizePersonSimilarities" type="int32" visibility="public" type_notes="Face Recognizer Person Similarities" container="array">
                <array>
                  <size>n</size>
                </array>
                <description>This metadata tag will provide a list of person similarities from face recognition. It is the biggest one of the estimated levels between the input face and the faces in databases. It is good to be tread as a kind of score.</description>
                <range>[0,100]</range>
                <details>0 is not likely the person
                         100 is quite sure of the person
                </details>
              </entry>

              <entry name="faceDetectRipAngles" type="int32" visibility="public"
                     type_notes="(-180~180) x n, where n is number of faces" container="array">
                <array>
                  <size>n</size>
                </array>
                <description>This metadata tag will provide an list of RIP (Rotation In-Plane) angles from face detection. Represented in degree. Also known as 'rolling'.</description>
                <units>Degrees</units>
                <range>[-180,180]</range>
                <details>The angle is represented as degree. The upright face is 0 degree, clock wise is positive, CC wise is negatives.
                </details>
              </entry>

              <entry name="faceDetectRopAngles" type="int32" visibility="public"
                     type_notes="(-1, 0, 1) x n, where n is number of faces" container="array">
                <array>
                  <size>n</size>
                </array>
                <description>This metadata tag will provide an list of ROP (Rotation out-of-plane) angles from face detection. Represented in degree. Also known as 'yawing'. Piching is not supported</description>
                <range>(-1, 0, 1)</range>
                <details>The frontal face is 0, left profile face is -1, right profile face is 1.
                </details>
              </entry>
          </dynamic>

          <static>
            <namespace name="info">
              <entry name="availableFaceRecognize" type="byte" visibility="public" type_notes="List of enums" container="array" typedef="enumList">
                <array>
                  <size>n</size>
                </array>
                <description>List of enums from com.intel.cv.faceRecognizeMode</description>
                <details>NO is always supported.

                         Yes means the device supports com.intel.cv.faceRecognizePersonIds and com.intel.cv.faceRecognizePersonSimilarities outputs.
                </details>
              </entry>

              <entry name="availableObjectTrack" type="byte" visibility="public" type_notes="List of enums" container="array" typedef="enumList">
                <array>
                  <size>n</size>
                </array>
                <description>List of enums from com.intel.faceEngineObjectTracking.mode</description>
                <details>NO is always supported.

                         Yes means the device supports com.intel.cv.objectTrackingBoundingRectangles, com.intel.cv.objectTrackingTrackingIds and com.intel.cv.objectTrackingScores outputs.
                </details>
              </entry>

              <entry name="availablePanorama" type="byte" visibility="public" type_notes="List of enums" container="array" typedef="enumList">
                <array>
                  <size>n</size>
                </array>
                <description>List of enums from com.intel.cv.panoramaMode</description>
                <details>NO is always supported.

                         Yes means the device supports (TO BE DEFINED)
                </details>
              </entry>
            </namespace>
          </static>
        </section>
        <section name="device">
          <controls>
              <entry name="dualCameraMode" type="byte" visibility="public" enum="true" >
                <enum>
                  <value>OFF
                  <notes>(default) Dual camera mode is off.</notes></value>
                  <value>ON
                  <notes>Dual camera mode is on</notes></value>
                </enum>
                <description>Control of Dual camera.</description>
                <details>When ON, the camera HAL can support dual camera mode.  </details>
              </entry>
          </controls>

          <dynamic>
              <clone entry="com.intel.device.dualCameraMode" kind="controls"></clone>
          </dynamic>

          <static>
            <namespace name="info">
              <entry name="availableDualCameraMode" type="byte" visibility="public" type_notes="List of enums" container="array" typedef="enumList">
                <array>
                  <size>n</size>
                </array>
                <description>List of enums from com.intel.device.dualCameraMode</description>
                <details>OFF Dual camera mode is off. ON Dual camera mode is on.
                </details>
              </entry>

              <entry name="availableExtensions" type="byte" visibility="public" enum="true" container="array">
                <array>
                  <size>n</size>
                </array>
                <enum>
                  <value>STATISTICS
                  <notes>camera extension supports statistics analisys </notes></value>
                  <value>CV
                  <notes>camera extension supports computer vision </notes></value>
                  <value>ENHANCEMENT
                  <notes>camera extension supports image enhancement, eg saturation </notes></value>
                  <value>DEVICE
                  <notes>camera extension supports special features in device,eg dual video </notes></value>
                </enum>
                <description>List of enums from com.intel.device.info.availableExtensions</description>
                <details>The empty list means no camera extension support
                </details>
              </entry>
            </namespace>
          </static>

        </section>
        <section name="imageEnhance">
          <controls>
              <entry name="colorEffect" type="byte" visibility="public" enum="true" >
                <enum>
                  <value>OFF
                  <notes>disable Intel color effect</notes></value>
                  <value>SKY_BLUE
                  <notes>ia_aiq_color_effect_sky_blue</notes></value>
                  <value>GRASS_GREEN
                  <notes>ia_aiq_color_effect_grass_green</notes></value>
                  <value>SKIN_WHITEN
                  <notes>ia_aiq_color_effect_skin_whiten</notes></value>
                  <value>SKIN_WHITEN_LOW
                  <notes>ia_aiq_color_effect_skin_whiten_low</notes></value>
                  <value>SKIN_WHITEN_HIGH
                  <notes>ia_aiq_color_effect_skin_whiten_high</notes></value>
                  <value>VIVID
                  <notes>ia_aiq_color_effect_vivid</notes></value>
                </enum>
                <description>This contains the color effect modes supported by Intel 3A that can be applied to images.</description>
                <details>
                  Intel color effect can be used like as an extension to the standard control(android.control.effectMode).
                  But due to range checks in android standard API, those keys can't be sent by android.control.effectMode,
                  it's right way to send by separate control tag.
                  If a request with both tags arrives at the HAL, the Android standard metadata should take precedence
                  over the Intel's.
                </details>
              </entry>

              <entry name="brightness" type="int32" visibility="public" >
                <range>[-10,10]; 10 is maximum brightening, 0 is neutral</range>
                <details> value of brightness </details>
              </entry>

              <entry name="contrast" type="int32" visibility="public" >
                <range>[-10,10]; 10 is maximum contrast, 0 is neutral</range>
                <details> value of contrast</details>
              </entry>

              <entry name="saturation" type="int32" visibility="public" >
                <range>[-10,10], 10 is maximum saturation, 0 is neutral</range>
                <details> value of saturation</details>
              </entry>

              <entry name="hue" type="int32" visibility="public" >
                <range>[-10,10], 10 is maximum hue, 0 is neutral</range>
                <details> value of hue</details>
              </entry>

              <entry name="sharpness" type="int32" visibility="public" >
                <range>[-10,10], 10 is maximum sharpening, 0 is neutral</range>
                <details> value of sharpness</details>
              </entry>
          </controls>

          <dynamic>
              <clone entry="com.intel.imageEnhance.colorEffect" kind="controls"></clone>
              <clone entry="com.intel.imageEnhance.brightness" kind="controls"></clone>
              <clone entry="com.intel.imageEnhance.contrast" kind="controls"></clone>
              <clone entry="com.intel.imageEnhance.saturation" kind="controls"></clone>
              <clone entry="com.intel.imageEnhance.hue" kind="controls"></clone>
              <clone entry="com.intel.imageEnhance.sharpness" kind="controls"></clone>
          </dynamic>

          <static>
            <namespace name="info">
              <entry name="availablecolorEffects" type="byte" visibility="public" type_notes="List of enums" container="array" typedef="enumList">
                <array>
                  <size>n</size>
                </array>
                <description>List of color effect modes for com.intel.imageEnhance.colorEffect that can be applied to images.</description>
                <range>Any value listed in com.intel.imageEnhance.colorEffect</range>
                <details>
                  Android standard color effect modes and Intel color effect modes can't be applied at same time,
                  Android color effect should have higher priority
                </details>
              </entry>
            </namespace>
          </static>

        </section>
      <!--@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~
      * End generated code
      *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@-->
      </namespace>
  </namespace>
</metadata>
